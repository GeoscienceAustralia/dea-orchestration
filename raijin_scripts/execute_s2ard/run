#!/bin/bash

set -eu

FILE_MOD_END=""
FILE_MOD_START_OFFSET=""
OBS_YEAR=""
RUNDIR='/g/data/v10/work/s2_ard/pbs'
S2_START_YEAR=2015

while [[ $# -gt 0 ]]; do
    key="$1"
    case ${key} in
        --task )                    shift
                                    S2TASK="$1"
                                    ;;
        --level1-dir )              shift
                                    INPUT_DIR="$1"
                                    ;;
        --output-dir )              shift
                                    OUTPUT_DIR="$1"
                                    ;;
        --copy-parent-dir-count )   shift
                                    COPY_PARENT_DIR_COUNT="$1"
                                    ;;
        --file-mod-start )          shift
                                    FILE_MOD_START="$1"
                                    ;;
        --file-mod-end )            shift
                                    FILE_MOD_END="$1"
                                    ;;
        --file-mod-start-offset )   shift
                                    FILE_MOD_START_OFFSET="$1"
                                    ;;
        --days-to-process )         shift
                                    DAYS_TO_PROCESS="$1"
                                    ;;
        --project )                 shift
                                    PROJECT="$1"
                                    ;;
        --obs-year )                shift
                                    OBS_YEAR="$1"
                                    ;;
        * )                         shift
                                    echo "$key|$1 Too many params"
                                    exit 1
                                    ;;
    esac
    shift
done

# IF START DATE OFFSET IS DEFINED SHIFT START DATE BACK
if [ -n "$FILE_MOD_START_OFFSET" ]; then
    FILE_MOD_START="$(date -d"$FILE_MOD_START - $FILE_MOD_START_OFFSET days" +"%Y-%m-%d")"
fi

# SET FILE_MOD_END BASED ON DAYS TO PROCESS IF NOT SET
if [ -z "$FILE_MOD_END" ]; then
    FILE_MOD_END="$(date -d"$FILE_MOD_START + $DAYS_TO_PROCESS days" +"%Y-%m-%d")"
fi

if [ "$OBS_YEAR" == "current" ]; then
    # uses seq to handle end of year periods where it would be ideal to process both years
    OBS_YEAR="$( seq "$(date -d"$FILE_MOD_START" +"%Y")" "$(date -d"$FILE_MOD_END" +"%Y")")"
elif [ "$OBS_YEAR" == "previous" ]; then
    OBS_YEAR="$( seq $S2_START_YEAR "$(date -d"$FILE_MOD_END - 1 year" +"%Y")" )"
elif [ -n "$OBS_YEAR" ]; then
    # Turn the year into an array
    OBS_YEAR="$( seq "$OBS_YEAR" "$OBS_YEAR" )"
else
    # Process all
    OBS_YEAR="$( seq $S2_START_YEAR "$(date -d"$FILE_MOD_END" +"%Y")" )"
fi

echo "Loading module wagl module"

module use /g/data/v10/public/modules/modulefiles
module use /g/data/v10/private/modules/modulefiles

module load wagl/5.3.0


# Queue each year individually to reduce real time and total memory
for _year in "${OBS_YEAR[@]}"; do
    case "$S2TASK" in
        "level1"    )
                    cd "$RUNDIR/level1"
                    echo "Submitting PBS job to create level 1 yaml files: ${OUTPUT_DIR}"
                    qsub -V -N "S2-L1-YAML" \
                        -W umask=33 \
                        -q normal \
                        -l "walltime=24:00:00,mem=4GB,ncpus=1" \
                        -P "$PROJECT" \
                        -- s2-nci-processing generate-level1 \
                        --level1-root "$INPUT_DIR/$_year" \
                        --copy-parent-dir-count "$COPY_PARENT_DIR_COUNT" \
                        --output-dir "$OUTPUT_DIR" \
                        --start-date "$FILE_MOD_START" \
                        --end-date "$FILE_MOD_END" \
                        --dry-run
                    ;;
        "level2"    )
                    cd "$RUNDIR/level2"
                    echo "Submitting PBS job to process to level 2: ${OUTPUT_DIR}"
                    qsub -V -N "S2-L2-ARD" \
                        -W umask=33 \
                        -q normal \
                        -l "walltime=24:00:00,mem=4GB,ncpus=1" \
                        -P "$PROJECT" \
                        -- s2-nci-processing process-level2 \
                        --level1-root "$INPUT_DIR/$_year" \
                        --pkgdir "$OUTPUT_DIR" \
                        --logdir "/g/data/u46/users/av8534/temp/logdir" \
                        --workdir "/g/data/u46/users/av8534/temp/workdir" \
                        --start-date "$FILE_MOD_START" \
                        --end-date "$FILE_MOD_END" \
                        --env "${WAGL_CFG_ROOT}/5.3.0/Sentinel-2/definitive.env" \
                        --project "$PROJECT"
                    ;;
         "*"        )
                    echo "TASK '$S2TASK' not recognised"
                    exit 1
                    ;;
    esac
done
