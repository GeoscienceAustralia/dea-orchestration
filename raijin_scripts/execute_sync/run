#!/bin/bash
# shellcheck disable=SC2154
set -eu

while [[ "$#" -gt 0 ]]; do
    key="$1"
    case "${key}" in
        --dea-module )          shift
                                MODULE="$1"
                                ;;
        --queue )               shift
                                QUEUE="$1"
                                ;;
        --project )             shift
                                PROJECT="$1"
                                ;;
        --year )                shift
                                YEAR="$1"
                                ;;
        --path )                shift
                                BASE_PATH="$1"
                                ;;
        --suffixpath )          shift
                                SUFFIX_PATH="$1"
                                ;;
        --product )             shift
                                PRODUCT="$1"
                                ;;
        --trasharchived )       shift
                                TRASH_ARC="$1"
                                ;;
        * )
          echo "Input key, '$key', did not match the expected input argument key"
          exit 1
          ;;
    esac
    shift
done

PATHS_TO_PROCESS=()
WORKDIR=/g/data/v10/work/sync/"${PRODUCT}"/$(date '+%FT%H%M')
SYNC_CACHE="${WORKDIR}"/cache_$(date '+%N')
SUBMISSION_LOG="$WORKDIR"/sync-submission-"${PRODUCT}"-$(date '+%F-%T').log
JOB_NAME="${YEAR}_${PRODUCT}"
START_YEAR=$(echo "$YEAR" | cut -f 1 -d '-')
END_YEAR=$(echo "$YEAR" | cut -f 2 -d '-')

# Override echo command to prepend timestamp before echo message
echo() {
    command echo "$(date '+%F_%T.%N')" "$@"
}

mkdir -p "${SYNC_CACHE}"

module use /g/data/v10/public/modules/modulefiles
module load "${MODULE}"

TRASH_ARCHIVED=''
if [ "$TRASH_ARC" == yes ]; then
   TRASH_ARCHIVED='--trash-archived'
fi

for (( year = "$START_YEAR"; year <= "$END_YEAR"; ++year )); do
    PATHS_TO_PROCESS+=("$BASE_PATH$year$SUFFIX_PATH")
done

cd "${WORKDIR}"

echo "Start time: $(date '+%F-%T')

Logging job: ${JOB_NAME} into: ${SUBMISSION_LOG}
Loading module ${MODULE}

# Check if we can connect to the database
$(datacube -vv system check)
" > "$SUBMISSION_LOG"

for syncpath in "${PATHS_TO_PROCESS[@]}"
do
  nohup "$SHELL" >> "$SUBMISSION_LOG" 2>&1 << EOF &
  ##################################################################################################
  # Run dea-sync process
  ##################################################################################################
  echo ""
  echo "qsub -V -N dea-sync -q ${QUEUE} -W umask=33 -l wd,walltime=10:00:00,mem=25GB,ncpus=16 -m ae \
  -M nci.monitor@dea.ga.gov.au -P ${PROJECT} -o ${WORKDIR} -e ${WORKDIR} \
  -- dea-sync -vvv --cache-folder ${SYNC_CACHE} -j 4 --log-queries ${TRASH_ARCHIVED} --update-locations \
  --index-missing ${syncpath}"

  qsub -V -N dea-sync -q ${QUEUE} -W umask=33 -l wd,walltime=10:00:00,mem=25GB,ncpus=16 -m ae \
  -M nci.monitor@dea.ga.gov.au -P ${PROJECT} -o ${WORKDIR} -e ${WORKDIR} \
  -- dea-sync -vvv --cache-folder ${SYNC_CACHE} -j 4 --log-queries ${TRASH_ARCHIVED} --update-locations \
  --index-missing ${syncpath}
EOF
done
