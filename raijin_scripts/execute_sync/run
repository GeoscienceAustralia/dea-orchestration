#!/bin/bash
# shellcheck disable=SC2154
set -eu

while [[ "$#" -gt 0 ]]; do
    key="$1"
    case "${key}" in
        --dea-module )          shift
                                MODULE="$1"
                                ;;
        --queue )               shift
                                QUEUE="$1"
                                ;;
        --project )             shift
                                PROJECT="$1"
                                ;;
        --year )                shift
                                YEAR="$1"
                                ;;
        --path )                shift
                                BASE_PATH="$1"
                                ;;
        --suffixpath )          shift
                                SUFFIX_PATH="$1"
                                ;;
        --product )             shift
                                PRODUCT="$1"
                                ;;
        --trasharchived )       shift
                                TRASH_ARC="$1"
                                ;;
        * )
          echo "Input key, '$key', did not match the expected input argument key"
          exit 1
          ;;
    esac
    shift
done

PATHS_TO_PROCESS=()
WORKDIR=/g/data/v10/work/sync/"${PRODUCT}"/$(date '+%FT%H%M')
START_YEAR=$(echo "$YEAR" | cut -f 1 -d '-')
END_YEAR=$(echo "$YEAR" | cut -f 2 -d '-')
JOB_NAME=sync_"${PRODUCT}_${START_YEAR}-${END_YEAR}"
SUBMISSION_LOG="${WORKDIR}"/sync-${PRODUCT}-$(date '+%F-%T').log

# Override echo command to prepend timestamp before echo message
echo() {
    command echo "$(date '+%F_%T.%N')" "$@"
}

TRASH_ARCHIVED=''
if [ "$TRASH_ARC" == yes ]; then
   TRASH_ARCHIVED='--trash-archived'
fi

for (( year = "$START_YEAR"; year <= "$END_YEAR"; ++year )); do
  if [[ "${PRODUCT}" == "s2_ard_granule" ]]
  then
    for day in {0..3}; do
      PATHS_TO_PROCESS+=("$BASE_PATH$year$SUFFIX_PATH$day*/*/")
    done
  else
    PATHS_TO_PROCESS+=("$BASE_PATH$year$SUFFIX_PATH")
  fi
done

mkdir -p "${WORKDIR}"

cd "${WORKDIR}"

for syncpath in "${PATHS_TO_PROCESS[@]}"
do
  SYNC_CACHE="${WORKDIR}"/cache_$(date '+%N')
  mkdir -p "${SYNC_CACHE}"

  ##################################################################################################
  # Run dea-sync process
  ##################################################################################################
  nohup "$SHELL" > "$SUBMISSION_LOG" 2>&1 <<EOF &
  echo "Logging job: ${JOB_NAME} into: ${SUBMISSION_LOG}"
  echo ""
  echo Loading module ${MODULE}

  set -x  # echo ON

  qsub -N ${JOB_NAME} -q ${QUEUE} -W umask=33 -l wd,walltime=20:00:00,mem=3GB -m abe \
  -lother=gdata1:gdata2 -M nci.monitor@dea.ga.gov.au -P ${PROJECT} -o ${WORKDIR} -e ${WORKDIR} \
  -- /bin/bash -l -c "source $HOME/.bashrc; module use /g/data/v10/public/modules/modulefiles/; \
  module load ${MODULE}; dea-sync -vvv --cache-folder ${SYNC_CACHE} -j 1 ${TRASH_ARCHIVED} \
  --update-locations --index-missing ${syncpath}"

  set +x  # echo OFF
EOF
done

# Log the following values to the terminal, to be processed by the orchestration lambda function
echo sync_log="${SUBMISSION_LOG}"
echo sync_pbs_job_name="${JOB_NAME}"
echo sync_project="${PROJECT}"
echo sync_job_queue="${QUEUE}"
echo sync_work_dir="${WORKDIR}"
echo sync_product="${PRODUCT}"
