#!/bin/bash

set -eu

while [[ "$#" -gt 0 ]]; do
    key="$1"
    case "${key}" in
        --logfile )             shift
                                LOG_FILE="$1"
                                ;;
        * )
          echo "Input key, '$key', did not match the expected input argument key"
          exit 1
          ;;
    esac
    shift
done

function print_output
{
  [[ -z "$1" ]] && echo 'NA' || echo "$1"
  return 0
}

case "$LOG_FILE" in
    *"cog_conversion"* )  _job_ids=$(grep -E -rwoi '[0-9]{1,}.gadi-pbs' "$LOG_FILE" | cut -f2 -d':' | uniq | tr '\n' ', ')
                          ;;
    *"fc_albers"* )       LOG_DIR=$(grep 'Created work directory' "$LOG_FILE" | grep -o "[/].*")
                          _job_ids=$(grep -E -rwoi '[0-9]{1,}.gadi-pbs' "$LOG_DIR" | cut -f2 -d':' | uniq | tr '\n' ', ')
                          ;;
    *"wofs_albers"* )     LOG_DIR=$(grep 'Created work directory' "$LOG_FILE" | grep -o "[/].*")
                          _job_ids=$(grep -E -rwoi '[0-9]{1,}.gadi-pbs' "$LOG_DIR" | cut -f2 -d':' | uniq | tr '\n' ', ')
                          ;;
    * )                   _job_ids=$(grep -E -rwoi '[0-9]{1,}.gadi-pbs' "$LOG_FILE" | cut -f2 -d':' | uniq | tr '\n' ', ')
                          ;;
esac

print_output "$_job_ids"
