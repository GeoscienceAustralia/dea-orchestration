#!/bin/bash
set -eu

while [[ "$#" -gt 0 ]]; do
    key="$1"
    case "${key}" in
        --dea-module )          shift
                                MODULE="$1"
                                ;;
        --s3-output )           shift
                                S3_OUTPUT_URL="$1"
                                ;;
        --cog-product )         shift
                                PRODUCT="$1"
                                ;;
        --time-range )          shift
                                RANGE_EXP="$*"
                                break # Last input argument and hence exiting while loop
                                ;;
        * )
          echo "Input key, '$key', did not match the expected input argument key"
          exit 1
          ;;
    esac
    shift
done

COG_CONV_DIR="$HOME/COG-Conversion/converter"
WORKDIR=/g/data/v10/work/cog_conversion/"$PRODUCT"/$(date '+%F_%H-%M-%S')
JOB_NAME="Cog-$PRODUCT"
SUBMISSION_LOG="$WORKDIR"/Cog_Submission_$(date '+%s').log
START_YEAR=$(echo "$RANGE_EXP" | cut -f 1 -d '-')
END_YEAR=$(echo "$RANGE_EXP" | cut -f 2 -d '-')

mkdir -p "${WORKDIR}"

module use /g/data/v10/public/modules/modulefiles
module load "${MODULE}"

TIME_RANGE_TO_PROCESS="'$START_YEAR < time < $END_YEAR'"

echo "Start time: $(date '+%F-%T')

Loading module ${MODULE}

# Check if we can connect to the database
$(datacube -vv system check)
" > "$SUBMISSION_LOG"

cd "${WORKDIR}"

echo ""
echo "Starting Cog-Conversion process for the period ${TIME_RANGE_TO_PROCESS}......"

nohup "$SHELL" >> "$SUBMISSION_LOG" 2>&1 << EOF &
##################################################################################################
# Qsub cog-convert process
##################################################################################################
echo ""

set -x  # echo ON

python3 "$COG_CONV_DIR"/cog_conv_app.py qsub-cog -p ${PRODUCT} --output-dir ${WORKDIR} \
--time-range ${TIME_RANGE_TO_PROCESS} --aws-profile default --s3-output-url ${S3_OUTPUT_URL}

set +x  # echo OFF

EOF

# Log the following values to the terminal, to be processed by the orchestration lambda function
echo cog_log="${SUBMISSION_LOG}"
echo cog_pbs_job_name="${JOB_NAME}"
echo cog_project="v10"
echo cog_job_queue="normal"
echo cog_work_dir="${WORKDIR}"
echo cog_product="${PRODUCT}"
