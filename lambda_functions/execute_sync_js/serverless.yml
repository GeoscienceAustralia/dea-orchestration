# Welcome to Serverless!
#
# This file is the main config file for your service.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: execute-sync

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

# plugins:
plugins:
  # install serverless pseudo parameters using the following:
  #   1) $ npm install serverless-pseudo-parameters --save-dev
  - serverless-pseudo-parameters
  # Add simple-ssh as part of plugins so that serverless function shall package this module and deploy to aws
  - simple-ssh
  # adding the following lines to run locally before deployment
  # install serverless offline using the following:
  #   1) $ npm install serverless-offline --save-dev
  #   2) $ serverless
  #   3) $ serverless offline start
  # - serverless-offline

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    DEA_MODULE: "dea/20180515"
    PROJECT: "u46"
    QUEUE: "normal"
    hostkey: 'orchestrator.raijin.users.default.host'
    userkey: 'orchestrator.raijin.users.default.user'
    pkey: 'orchestrator.raijin.users.default.pkey'
  region: ap-southeast-2
  stackTags:
    repo: dea-orchestration
    author: santosh.mohan@ga.gov.au
    purpose: nci-automation
# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'ssm:GetParameters'
        - 'ssm:DescribeParameters'
      Resource:
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/orchestrator.*"
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/pipeline.*"
    - Effect: 'Allow'
      Action: 'kms:Decrypt'
      Resource:
        - "arn:aws:kms:#{AWS::Region}:#{AWS::AccountId}:key/eb628cf2-33db-4909-8581-d9c0626ac8ec"

functions:
  execute_sync:
    handler: handler.execute_sync
    events:
      - schedule:
          rate: cron(18 00 * * ? *) # Run daily, at 00:15:00 pm UTC time
          input:
            dea-module: ${self:provider.environment.DEA_MODULE}
            project: ${self:provider.environment.PROJECT}
            queue: ${self:provider.environment.QUEUE}
