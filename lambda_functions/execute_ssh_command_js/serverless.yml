# Welcome to Serverless!
#
# This file is the main config file for your service.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: execute-on

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

# plugins:
plugins:
  # install serverless pseudo parameters using the following:
  #   1) $ npm install serverless-pseudo-parameters --save-dev
  - serverless-pseudo-parameters

custom:
  Stage: ${opt:stage, self:provider.stage}
  CustEnv:
    s3Bucket:
      prod: "This is production environment"
      dev: "dea-lambdas-dev"

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    hostkey: 'orchestrator.raijin.users.default.host'
    userkey: 'orchestrator.raijin.users.default.user'
    pkey: 'orchestrator.raijin.users.default.pkey'
    DEA_MODULE: dea/20180515
    PROJECT: v10
    QUEUE: express
  region: ap-southeast-2
  deploymentBucket: ${self:custom.CustEnv.s3Bucket.${self:custom.Stage}}
  stackTags:
    repo: dea-orchestration
    author: santosh.mohan@ga.gov.au
    purpose: nci-automation
# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'ssm:GetParameters'
        - 'ssm:DescribeParameters'
      Resource:
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/orchestrator.*"
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/pipeline.*"
    - Effect: 'Allow'
      Action: 'kms:Decrypt'
      Resource:
        - "arn:aws:kms:#{AWS::Region}:#{AWS::AccountId}:key/*"

functions:
  execute_sync:
    handler: handler.raijin_ssh_command
    environment:
      cmd: 'execute_sync --dea-module ${self:provider.environment.DEA_MODULE}
                         --queue ${self:provider.environment.QUEUE}
                         --project ${self:provider.environment.PROJECT}
                         --year <%= year %>
                         --product <%= product %>'
    events:
      - schedule:
          rate: cron(55 01 * * ? *) # Run daily, at 01:55:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_nbar_albers
      - schedule:
          rate: cron(58 01 * * ? *) # Run daily, at 01:58:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_nbart_albers
      - schedule:
          rate: cron(00 02 * * ? *) # Run daily, at 02:00:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_pq_albers
      - schedule:
          rate: cron(15 02 * * ? *) # Run daily, at 02:15:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_nbar_oli_albers
      - schedule:
          rate: cron(30 02 * * ? *) # Run daily, at 02:30:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_nbart_oli_albers
      - schedule:
          rate: cron(45 02 * * ? *) # Run daily, at 02:45:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_pq_oli_albers
  execute_ingest:
    handler: handler.raijin_ssh_command
    environment:
      cmd: 'execute_ingest --dea-module ${self:provider.environment.DEA_MODULE}
                           --queue ${self:provider.environment.QUEUE}
                           --project ${self:provider.environment.PROJECT}
                           --year <%= year %>
                           --product <%= product %>'
    events:
      - schedule:
          rate: cron(00 03 * * ? *) # Run daily, at 03:00:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_nbar_albers
      - schedule:
          rate: cron(15 03 * * ? *) # Run daily, at 03:15:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_nbart_albers
      - schedule:
          rate: cron(30 03 * * ? *) # Run daily, at 03:30:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_pq_albers
      - schedule:
          rate: cron(45 03 * * ? *) # Run daily, at 03:45:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_nbar_oli_albers
      - schedule:
          rate: cron(00 04 * * ? *) # Run daily, at 04:00:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_nbart_oli_albers
      - schedule:
          rate: cron(15 04 * * ? *) # Run daily, at 04:15:00 am UTC time
          enabled: true
          input:
            year: 2017
            product: ls8_pq_oli_albers
  execute_stacker:
    handler: handler.raijin_ssh_command
    environment:
      cmd: 'execute_stacker --dea-module ${self:provider.environment.DEA_MODULE}
                            --queue ${self:provider.environment.QUEUE}
                            --project ${self:provider.environment.PROJECT}
                            --year <%= year %>
                            --app-config <%= appconfig %>'
    events:
      - schedule:
          rate: cron(30 04 * * ? *) # Run daily, at 04:30:00 am UTC time
          enabled: true
          input:
            year: 2017
            appconfig: ls8_nbar_albers.yaml
      - schedule:
          rate: cron(45 04 * * ? *) # Run daily, at 04:45:00 am UTC time
          enabled: true
          input:
            year: 2017
            appconfig: ls8_nbart_albers.yaml
      - schedule:
          rate: cron(00 05 * * ? *) # Run daily, at 05:00:00 am UTC time
          enabled: true
          input:
            year: 2017
            appconfig: ls8_pq_albers.yaml
      - schedule:
          rate: cron(15 05 * * ? *) # Run daily, at 05:15:00 am UTC time
          enabled: true
          input:
            year: 2017
            appconfig: ls8_nbar_oli_albers.yaml
      - schedule:
          rate: cron(30 05 * * ? *) # Run daily, at 05:30:00 am UTC time
          enabled: true
          input:
            year: 2017
            appconfig: ls8_nbart_oli_albers.yaml
      - schedule:
          rate: cron(45 05 * * ? *) # Run daily, at 05:45:00 am UTC time
          enabled: true
          input:
            year: 2017
            appconfig: ls8_pq_oli_albers.yaml
  execute_clean:
    handler: handler.raijin_ssh_command
    environment:
      cmd: 'execute_clean --dea-module ${self:provider.environment.DEA_MODULE}
                          --queue ${self:provider.environment.QUEUE}
                          --project ${self:provider.environment.PROJECT}
                          --min-trash-age-hours <%= mintrashage %>
                          --search-string <%= searchstr %>'
    events:
      - schedule:
          rate: cron(00 06 * * ? *)  # Run daily, at 06:00:00 am UTC time
          input:
            mintrashage: 10
            searchstr: ls8_nbar_albers
  git_pull_prod:
    handler: handler.raijin_ssh_command
    environment:
      pkey: 'orchestrator.raijin.users.default.pkey'