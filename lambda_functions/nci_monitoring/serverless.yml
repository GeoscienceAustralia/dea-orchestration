# Welcome to Serverless!
#
# This file is the main config file for your service.
#
# For full config options, check the docs:
#    docs.serverless.com
#
#    Sequence of steps before and after sls deploy:
#      1) npm install
#      2) sls deploy --aws-profile <Existing AWS Profile Name> -vv -s prod
#      3) Enable and attach event notifications for the desired S3 Bucket to the lambda function
#          (Ref: https://docs.aws.amazon.com/AmazonS3/latest/user-guide/enable-event-notifications.html)
#      4) sls s3deploy
#          (Ref: https://github.com/matt-filion/serverless-external-s3-event)

service: nci-monitor

plugins:
  - serverless-plugin-existing-s3
  - serverless-python-requirements
  - serverless-pseudo-parameters

custom:
  pythonRequirements:
    dockerizePip: non-linux

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt

provider:
  name: aws
  runtime: python3.6
  timeout: 60 # 60 seconds. Default is 6 seconds
  memorySize: 128 # in MB, default is 1024
  stage: prod
  # Since SES is not supported in Sydney region, all emails are pushed to the
  # S3 bucket in us-west-2 region.
  # For s3 to trigger lambda function execution, both the lambda function and S3 bucket need to be in the same region.
  region: us-west-2
  deploymentBucket: "dea-ncimonitoring"

  iamRoleStatements:
  - Effect: 'Allow'
    Action:
      - 'ssm:GetParameter'
      - 'ssm:GetParameters'
      - 'ssm:DescribeParameters'
    Resource:
      - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/orchestrator.*"
  - Effect: 'Allow'
    Action: 'kms:Decrypt'
    Resource:
      - "arn:aws:kms:#{AWS::Region}:#{AWS::AccountId}:key/*"
  - Effect: 'Allow'
    Action: 'es:ESHttp*'
    Resource: '*'
  - Effect: 'Allow'
    Action: 'cloudwatch:PutMetricData'
    Resource: '*'
  - Effect: "Allow"
    Action:
      - "s3:PutObject"
      - "s3:PutBucketNotification"
      - "s3:GetObject"
    Resource:
      Fn::Join:
        - ""
        - - "arn:aws:s3:::dea-ncimonitoring/NCIEmails/*"

  # Service wide environment variables declaration
  environment:
    NCI_PROJECTS: 'rs0,v10,u46,fk4,r78'
    NCI_STORAGE: 'gdata1,gdata1a,gdata1b,gdata2,gdata3,short,massdata'
    SSM_USER_PATH: 'orchestrator.raijin.users.default'
    DEA_AWS_ES_HOST: search-digitalearthaustralia-lz7w5p3eakto7wrzkmg677yebm.ap-southeast-2.es.amazonaws.com

functions:
  nci_quota_monitor:
    handler: nci_quotas_monitor.handler
    description: Record Quota/Usage for projects on the NCI into Cloudwatch Metrics and ElasticSearch
    events:
      - schedule: rate(2 hours)
  read_nci_email:
    handler: read_nci_email.handler
    description: Notify whenever an email is sent to nci monitoring S3 bucket
    events:
      - existings3:
          bucket: ${self:provider.deploymentBucket}
          event:
            - s3:ObjectCreated:*
          rules:
            # Call read_nci_email.handler lambda function whenever an object is created within NCIEmail folder
            - prefix: NCIEmails/
