# Monitor Digital Earth Australia processes running at the NCI
#
# Sequence of steps before and after sls deploy:
#
#  1) Create the SQS queue within your service (if sqs queue does not exist)
#  2) Add permissions on the SQS queue to allow S3 to publish notifications
#      https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-lambda-function-trigger.html
#      https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-basic-architecture.html
#  3) Enable and attach event notifications for the desired S3 Bucket to SQS queue
#  4) npm install
#  5) sls deploy --aws-profile <Existing AWS Profile Name> -vv -s prod

service: nci-monitoring

plugins:
  - serverless-python-requirements
  - serverless-pseudo-parameters

custom:
  pythonRequirements:
    dockerizePip: non-linux

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt

resources:
  Description: Monitor Digital Earth Australia quotas and processes running at the NCI

provider:
  name: aws
  runtime: python3.6
  timeout: 60  # 60 seconds. Default is 6 seconds
  memorySize: 128  # in MB, default is 1024
  stage: prod
  # Since SES is not supported in Sydney region, all emails are pushed to the
  # S3 bucket in us-west-2 region. For s3 to trigger SQS and SQS trigger lambda function execution, all the aws
  # resources need to be in the same region as S3 bucket.
  region: us-west-2
  deploymentBucket: "dea-ncimonitoring"
  tags:
    repo: https://github.com/GeoscienceAustralia/dea-orchestration
    author: nci.monitor@dea.ga.gov.au
    purpose: nci-automation
  iamRoleStatements:
  - Effect: 'Allow'
    Action:
      - 'ssm:GetParameter'
      - 'ssm:GetParameters'
      - 'ssm:DescribeParameters'
    Resource:
      - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/orchestrator.*"
  - Effect: 'Allow'
    Action: 'kms:Decrypt'
    Resource:
      - "arn:aws:kms:#{AWS::Region}:#{AWS::AccountId}:key/*"
  - Effect: 'Allow'
    Action: 'es:ESHttp*'
    Resource: '*'
  - Effect: 'Allow'
    Action: 'cloudwatch:PutMetricData'
    Resource: '*'
  - Effect: "Allow"
    Action:
        - "sqs:SendMessage"  # Message added to the SQS queue
    Resource: "arn:aws:sqs:#{AWS::Region}:#{AWS::AccountId}:WaitForTheLogs"
  - Effect: "Allow"
    Action:
      - "s3:GetObject"
    Resource:
      Fn::Join:
        - ""
        - - "arn:aws:s3:::dea-ncimonitoring/NCIEmails/*"

  # Service wide environment variables declaration
  environment:
    NCI_PROJECTS: 'rs0,v10,u46,fk4,r78,if87'
    NCI_STORAGE: 'gdata1,gdata1a,gdata1b,gdata2,gdata3,short,massdata'
    SSM_USER_PATH: 'orchestrator.raijin.users.default'
    DEA_AWS_ES_HOST: search-digitalearthaustralia-lz7w5p3eakto7wrzkmg677yebm.ap-southeast-2.es.amazonaws.com

functions:
  nci_quota_monitor:
    handler: nci_quotas_monitor.handler
    description: Record Quota/Usage for projects on the NCI into Cloudwatch Metrics and ElasticSearch
    events:
      - schedule: rate(2 hours)
  nci_pbsjob_monitor:
    handler: read_nci_email.handler
    description: Process PBS jobs and dataset info, once an email is sent to nci monitoring S3 bucket
    events:
      - sqs: "arn:aws:sqs:#{AWS::Region}:#{AWS::AccountId}:WaitForTheLogs"
