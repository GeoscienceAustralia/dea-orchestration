#!/bin/bash

# Script only works in linux, for installing the correct binary python deps

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
LAMBDA_TITLE="$1"
OUTPUT_FILE="${2%.zip}"  # remove zip extension if provided
TEMP_FOLDER="/tmp"
TEMP_FILE="$TEMP_FOLDER/$OUTPUT_FILE"

if [ -z "$LAMBDA_TITLE" ]; then
    echo "Please provide lambda filename as the first argument"
    exit 1
fi

if [ -z "$OUTPUT_FILE" ]; then
    echo "Please provide an output file as the second argument"
    exit 1
fi

pushd "$(pwd -P)" || exit 1

cd "$SCRIPT_DIR/.." || exit 1

if [[ ! -f "./lambda_functions/$LAMBDA_TITLE/requirements.txt" ]]; then
    echo "Please create a requirements.txt for your function"
    popd || exit 1
    exit 1
fi

if [[ ! -f "./lambda_functions/$LAMBDA_TITLE/$LAMBDA_TITLE.py" ]]; then
    echo "'$LAMBDA_TITLE.py' not found in lambda_functions/$LAMBDA_TITLE directory"
    popd || exit 1
    exit 1
fi

# make a temporary virtual environment
TEMP_ENV=$(mktemp -d -p $TEMP_FOLDER)
python3.6 -m venv "$TEMP_ENV/venv"
source "$TEMP_ENV/venv/bin/activate"

pip install -r "./lambda_functions/$LAMBDA_TITLE/requirements.txt"

deactivate

# Get handler
pushd "$(pwd -P)" || exit 1
cd "./lambda_functions/$LAMBDA_TITLE" || exit 1
zip "$TEMP_FILE" "$LAMBDA_TITLE.py"
popd || exit 1

pushd "$(pwd -P)" || exit 1

# zip common dependencies
cd "$TEMP_ENV/venv/lib/python3.6/site-packages" || exit 1
zip -rg9 "$TEMP_FILE" .

# remove the temporary install environment
popd || exit 1
rm -rf "$TEMP_ENV"

popd || exit 1
mv "$TEMP_FILE.zip" .
exit 0
